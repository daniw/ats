

(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK EdgeDetector
VAR_INPUT
	inputValue : BOOL;
END_VAR
VAR_OUTPUT
	risingEdge : BOOL;
	fallingEdge : BOOL;
END_VAR
VAR
	prev : BOOL := FALSE;
END_VAR
(* @END_DECLARATION := '0' *)
IF inputValue > prev THEN
	risingEdge := TRUE;
	fallingEdge := FALSE;
ELSIF inputValue < prev THEN
	risingEdge := FALSE;
	fallingEdge := TRUE;
ELSE
	risingEdge := FALSE;
	fallingEdge := FALSE;
END_IF
prev := inputValue;
END_FUNCTION_BLOCK


(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK EdgeDetectorDouble
VAR_INPUT
	inputValue : BOOL;
	threshold : INT;
END_VAR
VAR_OUTPUT
	risingEdge : BOOL;
	fallingEdge : BOOL;
	double : BOOL;
END_VAR
VAR
	prev : BOOL := FALSE;
	timer : INT := 0;
END_VAR
(* @END_DECLARATION := '0' *)
IF inputValue > prev THEN
	risingEdge := TRUE;
	fallingEdge := FALSE;
	IF timer < threshold THEN
		double := TRUE;
	ELSE
		double := FALSE;
	END_IF
	timer := 0;
ELSIF inputValue < prev THEN
	risingEdge := FALSE;
	fallingEdge := TRUE;
	IF timer < 32767 THEN
		timer := timer + 1;
	END_IF
	double := FALSE;
ELSE
	risingEdge := FALSE;
	fallingEdge := FALSE;
	IF timer < 32767 THEN
		timer := timer + 1;
	END_IF
	double := FALSE;
END_IF
prev := inputValue;
END_FUNCTION_BLOCK
